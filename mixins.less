// reset dimensions, padding, margin and border
.box-reset() {
	width: auto;
	height: auto;
	padding: 0;
	margin: 0;
	border: 0;
}

// set dimensions, padding and border
.box-style(@width: 100%, @height: 100%, @xpadding: 0px, @ypadding: 0px, @border: 0) {
	width: @width;
	height: @height;
	padding: @ypadding @xpadding;
	border: @border;
}

// responsive background image
.cover-image(@url) {
	background: url(@url) no-repeat center center fixed; 
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
}

// vertical 2-stop gradient
.gradient-vertical(@color, @color2) {
	background: -moz-linear-gradient(top, @color 0%, @color2 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,@color), color-stop(100%,@color2));
	background: -webkit-linear-gradient(top, @color 0%,@color2 100%);
	background: -o-linear-gradient(top, @color 0%,@color2 100%);
	background: -ms-linear-gradient(top, @color 0%,@color2 100%);
	background: linear-gradient(to bottom, @color 0%,@color2 100%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='@color', endColorstr='@color2',GradientType=0 );
}

// horizontal 2-stop gradient
.gradient-horizontal(@color, @color2) {
	background: -moz-linear-gradient(left, @color 0%, @color2 100%);
	background: -webkit-gradient(linear, left top, right top, color-stop(0%,@color), color-stop(100%,@color2));
	background: -webkit-linear-gradient(left, @color 0%,@color2 100%);
	background: -o-linear-gradient(left, @color 0%,@color2 100%);
	background: -ms-linear-gradient(left, @color 0%,@color2 100%);
	background: linear-gradient(to right, @color 0%,@color2 100%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='@color', endColorstr='@color2',GradientType=1 );
}

// rotation
.rotate(@deg) {
	-webkit-transform: rotate(@deg);
	-moz-transform: rotate(@deg);
	transform: rotate(@deg); 
}

// transition (all)
.transition(@duration: 500, @mode: linear) {
	-webkit-transition: all unit(@duration, ms) @mode;
	-moz-transition: all unit(@duration, ms) @mode;
	-ms-transition: all unit(@duration, ms) @mode;
	-o-transition: all unit(@duration, ms) @mode;
	transition: all unit(@duration, ms) @mode;	
}

// color & hover color
.link-colors(@norm, @hvr) {
	color: @norm;
	&:hover {
		color: @hvr;
	}
}
